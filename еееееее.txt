1. git config --global user.name - для авторизации
2. git config --global user.email - для авторизации 
3. pwd - выводит путь к текущему рабочему каталогу
4. git init - создать новый репозиторий 
5. ls -la - показывает все файлы в директории
6. git add . - сохранение изменений
7. git commit -m "initial" - фиксация изменений и записи их в репозитории
8. git status - состояние раб.каталога
9. git log - история коммитов
10. git show - отображение объекта в простом и понятном виде
11. git push - выгрузка содержимого локального репозитория в удаленный
12. git pull - извлекает и загружает содержимое из удаленного репозитория в локальный
13. git clone - клонирует удаленный репозиторий в локльную папку
14. gitignore - игнорирование файлов
15. git checkout - переключение между ветками
16. git checkout -b - создание ветки
17. git merge - слияние одной или нескольких веток в текущую
18. git branch - "менеджер веток": создает новые, удаляет и переименовывает их
19. git stash временное сохранение всех незакоммиченных изменений для очистки раб.директории без необходимости их коммитить незавершенную работу в новую ветку
20. git stash pop - выводит скрытые временные изменения (разморозка)
21. git remote - управление списком удаленных репозиториев
22. git remote -v - используется, чтобы указать, на каких удаленных конечных точках будут работать команды синхронизации
23. git rm - удаление файлов из индекса и рабочей копии
24. git diff -  сравнения источников данных git — коммитов, веток, файлов и т. д.
25. git restore - отмена изменений в рабочем каталоге
26. git restore --staged - удаляет файл из промежуточной области, но оставляет его фактические модификации нетронутыми.
27. git restore --hard 
28. git reset - отмена локальных изменений в репозитории Git
29. git reset --soft
30. git reset --mixed 
31. git reset --hard 
32. git commit --amend -m - создает новые коммиты, но максимально переиспользует содержимое предыдущих, меняет содержимое, сообщение, автора последнего коммита 
33. git blame - позволяет построчно изучить содержимое файла и выяснить, когда и кто внес последние изменения каждой строки
34. git git clean -f - используется для удаления мусора из рабочей директории
35. git mv